/*  Pawn compiler - Error message strings (plain and compressed formats)
 *
 *  Copyright (c) ITB CompuPhase, 2000-2015
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not
 *  use this file except in compliance with the License. You may obtain a copy
 *  of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 *  License for the specific language governing permissions and limitations
 *  under the License.
 *
 *  Version: $Id: sc5.sch 5181 2015-01-21 09:44:28Z thiadmer $
 */

SC_FUNC int strexpand(char *dest, unsigned char *source, int maxlen, unsigned char pairtable[128][2]);

#define SCPACK_TABLE errstr_table
/*-*SCPACK start of pair table, do not change or remove this line */
unsigned char errstr_table[][2] = {
  {101,32}, {111,110}, {105,110}, {116,32}, {97,114}, {100,32}, {116,105}, {115,32}, {37,115}, {101,114}, {134,129}, {97,108}, {34,136}, {140,34}, {101,110}, {117,110},
  {121,32}, {115,105}, {114,101}, {111,114}, {97,116}, {110,111}, {97,110}, {101,133}, {32,141}, {100,101}, {115,116}, {109,142}, {109,98}, {114,97}, {98,108}, {138,32},
  {143,99}, {102,160}, {111,108}, {149,131}, {118,139}, {132,157}, {115,121}, {166,156}, {167,162}, {117,115}, {105,133}, {97,32}, {115,145}, {147,32}, {116,104}, {165,144},
  {103,32}, {164,170}, {101,120}, {97,158}, {130,177}, {153,102}, {101,100}, {117,155}, {161,159}, {103,183}, {132,185}, {111,102}, {137,32}, {109,97}, {99,104}, {118,132},
  {112,146}, {168,152}, {105,179}, {191,194}, {116,111}, {99,129}, {101,135}, {105,135}, {187,32}, {181,130}, {98,128}, {169,131}, {186,131}, {154,148}, {44,32}, {193,41},
  {109,203}, {40,207}, {105,99}, {130,176}, {115,117}, {145,122}, {195,128}, {102,147}, {109,148}, {58,152}, {34,32}, {129,32}, {139,32}, {100,105}, {101,108}, {110,32},
  {130,32}, {104,97}, {97,99}, {108,111}, {111,112}, {161,138}, {197,154}, {150,32}, {192,172}, {208,202}, {102,105}, {178,232}, {117,108}, {99,111}, {150,131}, {108,128},
  {118,128}, {228,137}, {189,144}, {116,97}, {119,105}, {97,109}, {100,111}, {112,111}, {97,115}, {110,117}, {174,128}, {116,137}, {249,156}, {174,32}, {252,188}
};
/*-*SCPACK end of pair table, do not change or remove this line */

static char *errmsg[] = {
#ifdef SCPACK
/*000*/  "*",   /* scpack does not like empty strings */
/*001*/  "expected token: \"%s\", but found \"%s\"",
/*002*/  "only a single statement (or expression) can follow each \"case\"",
/*003*/  "declaration of a local variable must appear in a compound block",
/*004*/  "function \"%s\" is not implemented",
/*005*/  "function may not have arguments",
/*006*/  "must be assigned to an array",
/*007*/  "operator cannot be redefined",
/*008*/  "must be a constant expression; assumed zero",
/*009*/  "invalid array size (negative, zero or out of bounds)",
/*010*/  "invalid function or declaration",
/*011*/  "invalid outside functions",
/*012*/  "invalid function call, not a valid address",
/*013*/  "no entry point (no public functions)",
/*014*/  "invalid statement; not in switch",
/*015*/  "\"default\" case must be the last case in switch statement",
/*016*/  "multiple defaults in \"switch\"",
/*017*/  "undefined symbol \"%s\"",
/*018*/  "initialization data exceeds declared size",
/*019*/  "not a label: \"%s\"",
/*020*/  "invalid symbol name \"%s\"",
/*021*/  "symbol already defined: \"%s\"",
/*022*/  "must be lvalue (non-constant)",
/*023*/  "array assignment must be simple assignment",
/*024*/  "\"break\" or \"continue\" is out of context",
/*025*/  "function heading differs from prototype",
/*026*/  "no matching \"#if...\"",
/*027*/  "invalid character constant",
/*028*/  "invalid subscript (not an array or too many subscripts): \"%s\"",
/*029*/  "invalid expression, assumed zero",
/*030*/  "compound statement not closed at the end of file (started at line %d)",
/*031*/  "unknown directive",
/*032*/  "array index out of bounds (variable \"%s\")",
/*033*/  "array must be indexed (variable \"%s\")",
/*034*/  "argument does not have a default value (argument %d)",
/*035*/  "argument type mismatch (argument %d)",
/*036*/  "empty statement",
/*037*/  "invalid string (possibly non-terminated string)",
/*038*/  "extra characters on line",
/*039*/  "constant symbol has no size",
/*040*/  "duplicate \"case\" label (value %d)",
/*041*/  "invalid ellipsis, array size is not known",
/*042*/  "invalid combination of class specifiers",
/*043*/  "character constant %ld exceeds range for a packed string/array",
/*044*/  "positional parameters must precede all named parameters",
/*045*/  "too many function arguments",
/*046*/  "unknown array size (variable \"%s\")",
/*047*/  "array sizes/definitions do not match, or destination array is too small",
/*048*/  "array dimensions do not match",
/*049*/  "invalid line continuation",
/*050*/  "invalid range",
/*051*/  "invalid subscript, use \"[ ]\" operators on major dimensions and for named indices",
/*052*/  "multi-dimensional arrays must be fully initialized",
/*053*/  "exceeding maximum number of dimensions",
/*054*/  "unmatched closing brace (\"}\")",
/*055*/  "start of function body without function header",
/*056*/  "arrays, local variables and function arguments cannot be public (variable \"%s\")",
/*057*/  "unfinished expression before compiler directive",
/*058*/  "duplicate argument; same argument is passed twice",
/*059*/  "function argument may not have a default value (variable \"%s\")",
/*060*/  "multiple \"#else\" directives between \"#if ... #endif\"",
/*061*/  "\"#elseif\" directive follows an \"#else\" directive",
/*062*/  "number of operands does not fit the operator",
/*063*/  "function result tag of operator \"%s\" must be \"%s\"",
/*064*/  "cannot change predefined operators",
/*065*/  "function argument may only have a single tag (argument %d)",
/*066*/  "function argument may not be a reference argument or an array (argument \"%s\")",
/*067*/  "variable cannot be both a reference and an array (variable \"%s\")",
/*068*/  "invalid rational number precision in #pragma",
/*069*/  "rational number format already defined",
/*070*/  "rational number support was not enabled",
/*071*/  "user-defined operator must be declared before use (function \"%s\")",
/*072*/  "\"sizeof\" operator is invalid on \"function\" symbols",
/*073*/  "function argument must be an array (argument \"%s\")",
/*074*/  "#define pattern must start with an alphabetic character",
/*075*/  "input line too long (after substitutions)",
/*076*/  "syntax error in the expression, or invalid function call",
/*077*/  "malformed UTF-8 encoding, or corrupted file: %s",
/*078*/  "function uses both \"return\" and \"return <value>\"",
/*079*/  "inconsistent return types (array & non-array)",
/*080*/  "unknown symbol, or not a constant symbol (symbol \"%s\")",
/*081*/  "reserved",
/*082*/  "user-defined operators and native functions may not have states",
/*083*/  "a function or variable may only belong to a single automaton (symbol \"%s\")",
/*084*/  "state conflict: one of the states is already assigned to another implementation (symbol \"%s\")",
/*085*/  "no states are defined for symbol \"%s\"",
/*086*/  "unknown automaton \"%s\"",
/*087*/  "unknown state \"%s\" for automaton \"%s\"",
/*088*/  "public variables and local variables may not have states (symbol \"%s\")",
/*089*/  "state variables may not be initialized (symbol \"%s\")",
/*090*/  "public functions may not return arrays (symbol \"%s\")",
/*091*/  "first constant in an enumerated list must be initialized (symbol \"%s\")",
/*092*/  "invalid number format",
/*093*/  "array fields with a size may only appear in the final dimension",
/*094*/  "invalid subscript, subscript does not match array definition regarding named indices (symbol \"%s\")",
/*095*/  "multiple default entry points: both main() and @start() are declared"
#else
  "*",
  "\262pect\227\304k\216\331\316bu\203fo\217\205\215",
  "\201l\220\253s\202g\357\315e\233\203(\255\353\201) c\347f\242\343w ea\276 \042c\370e\042",
  "\231cl\204a\237\310\253\343c\334\326\320appe\204 \340\253\355m\367\217\205\236ock",
  "\345\230 \307\243imple\233t\266",
  "\270\362\243\341\360\272ts",
  "\351a\254gn\227\304 \347\245y",
  "\361\224\255c\226\243\312\222\311\266",
  "\351\253\346\356\353\201; \370\324m\227z\211o",
  "\264\257\325\200(nega\206ve\316z\211o \255ou\203\310bo\217ds)",
  "\264\270\255\231cl\204a\212",
  "\264out\221d\200\345s",
  "\264\270c\213l\316\243\253\261add\222ss",
  "\225 \216tr\220\367\202\203(\225 pu\236\322 \345s)",
  "\264\315e\233t; \243\340s\364t\276",
  "\042\265a\354t\332c\370\200\351\372l\370\203c\370\200\340s\364t\276 \315e\233t",
  "m\354\206p\357\265a\354t\207\340\042s\364t\276\042",
  "\217\311\227\301",
  "\202i\206\213iza\237d\224\253\262ce\266\207\231cl\204\227\325e",
  "\243\253lab\336\331",
  "\264\250 n\365\200\215",
  "\250 \213\222ad\220\311\266\331",
  "\351l\244u\200(n\201-\346\226t)",
  "\257a\254gn\233\203\351\221mp\357a\254gn\233t",
  "\042b\222ak\332\255\042\305t\202ue\332\307ou\203\310\305t\262t",
  "\270head\323\335ff\211\207from pro\304type",
  "\225 \330\276\323\042#if...\042",
  "\264\276\204\342t\274\346\226t",
  "\264\324bscrip\203(\243\347\257\255\304o m\226\220\324bscripts)\331",
  "\264\353\201\316\370\324m\227z\211o",
  "\355m\367\217\205\315e\233\203\243c\343s\227a\203\372\216\205\310\352\357(\232\204t\227a\203l\202\200%d)",
  "\217k\225w\337\335\222c\206ve",
  "\257\202\231x ou\203\310bo\217d\207(\326\215)",
  "\257\351\202\231x\227(\326\215)",
  "\314\366\306\243\341\360\253\265a\354\203\244u\200(\314%d)",
  "\314typ\200mis\330\276 (\314%d)",
  "empt\220\315e\233t",
  "\264\232r\323(\367\254\236\220n\201-\373m\202\224\227\232r\202g)",
  "\262t\235 \276\204\342\373\207\333l\202e",
  "\346\356\250 \341\207\225 \325e",
  "dupl\322\224\200\042c\370e\332lab\336 (\244u\200%d)",
  "\264\336lip\221s\316\257\325\200\307\243k\225wn",
  "\264\355\234\202a\237\310cl\370\207speci\352\211s",
  "\276\204\342t\274\346\356%l\205\262ce\266\207r\226g\200f\255\253p\342k\227\232r\202g/\245y",
  "\367\221\212\334p\204\365e\373\207\320\300c\266\200\213l n\365\227p\204\365e\373s",
  "\304o m\226\220\270\272ts",
  "\217k\225w\337\257\325\200(\326\215)",
  "\257\325es/\311i\212\207\366 \243\330\276\316\255\231\232\202a\237\257\307\304o sm\213l",
  "\257\335\233\221\201\207\366 \243\330\276",
  "\264l\202\200\305t\202ua\212",
  "\264r\226ge",
  "\264\324bscript\316\251\200\042[ ]\332\361\224\223\207\333\275j\255\335\233\221\201\207\226\205f\255n\365\227\202d\322es",
  "m\354\206-\335\233\221\201\334\245y\207\351f\354l\220\202i\206\213iz\266",
  "\262ce\266\323\275ximum \376\310\335\233\221\201s",
  "\217\330\276\227c\343s\323b\235c\200(\042}\042)",
  "\232\204\203\310\270bod\220\364\256ou\203\270head\211",
  "\245ys\316\343c\334\303\306\226\205\270\272t\207c\226\243\312pu\236\322 (\326\215)",
  "\217f\202ish\227\353\333be\327\200\355mpil\274\335\222c\206ve",
  "dupl\322\224\200\272t; s\365\200\314\307p\370s\227tw\322e",
  "\270\314\362\243\341\360\253\265a\354\203\244u\200(\326\215)",
  "m\354\206p\357\042#\336se\332\335\222c\206v\306betwe\216 \042#if ... #\216\335f\042",
  "\042#\336seif\332\335\222c\206\360f\242\343w\207\347\042#\336se\332\335\222c\206ve",
  "\376\310\361\226d\207\366\306\243\352\203\372\361\224\223",
  "\270\222\324l\203\363\260\310\361\224\223\230 \351\215",
  "c\226\243\276\226g\200\300\311\227\361\224\223s",
  "\270\314\362\201l\220\341\360\253s\202g\357\363\260(\314%d)",
  "\270\314\362\243\312\253\222f\211\216c\200\314\255\347\257(\314\215)",
  "\326c\226\243\312bo\375\253\222f\211\216c\200\226\205\347\257(\326\215)",
  "\264\235\212\334\376\300ci\221\333\340#p\235g\275",
  "\235\212\334\376\327\275\203\213\222ad\220\311\266",
  "\235\212\334\376\324pp\223\203wa\207\243\216\263\266",
  "\251\211-\311\227\361\224\255\351\231cl\204\227be\327\200\251\200(\345\230)",
  "\042\325e\273\332\361\224\255\307\264\333\042\345\332\250s",
  "\270\314\351\347\257(\314\215)",
  "#\311\200p\224\373\337\320\232\204\203\364\375\347\213p\341be\206c \276\204\342\373",
  "\202pu\203l\202\200\304o l\201\260(aft\274\324bs\206tu\212s)",
  "\246n\363x \211r\255\340\372\353\201\316\255\264\270c\213l",
  "m\213\327m\227UTF-8 \216\355d\202g\316\255c\223rupt\227\352le: \210",
  "\270\251\306bo\375\042\222turn\332\226\205\042\222tur\337<\244ue>\042",
  "\202\305\221\232\216\203\222tur\337typ\306(\257& n\201-\245y)",
  "\217k\225w\337\250\316\255\243\253\346\356\250 \321",
  "\222s\211v\266",
  "\251\211-\311\227\361\224\223\207\226\205na\206\360\345\207\362\243\341\360\315es",
  "\253\270\255\326\362\201l\220b\336\201\260\304 \253s\202g\357au\304\330\333\321",
  "\315\200\305fl\322t: \201\200\310\372\315\306\307\213\222ad\220a\254gn\227\304 a\225\256\274imple\233\363\237\321",
  "\225 \315\306\204\200\311\227f\255\301",
  "\217k\225w\337au\304\330\201\230",
  "\217k\225w\337\315\200\215 f\255au\304\330\201\230",
  "pu\236\322 \303\306\226\205\343c\334\303\306\362\243\341\360\315\306\321",
  "\315\200\303\306\362\243\312\202i\206\213iz\227\321",
  "pu\236\322 \345\207\362\243\222tur\337\245y\207\321",
  "\352rs\203\346\356\340\347\216um\211\224\227lis\203\351\202i\206\213iz\227\321",
  "\264\376\327\330",
  "\257\352\336d\207\364\375\253\325\200\362\201l\220appe\204 \340\372f\202\334\335\233\221\201",
  "\264\324bscript\316\324bscrip\203\366\306\243\330\276 \257\311i\237\222g\204d\323n\365\227\202d\322\306\321",
  "m\354\206p\357\265a\354\203\216tr\220\367\202ts: bo\375\275\202() \226\205@\232\204t() \204\200\231cl\204\266"
#endif
       };

static char *fatalmsg[] = {
#ifdef SCPACK
/*100*/  "cannot read from file: \"%s\"",
/*101*/  "cannot write to file: \"%s\"",
/*102*/  "table overflow: \"%s\"",
          /* table can be: loop table
           *               literal table
           *               staging buffer
           *               option table (response file)
           *               peephole optimizer table
           */
/*103*/  "insufficient memory",
/*104*/  "incompatible options: \"%s\" versus \"%s\"",
/*105*/  "numeric overflow, exceeding capacity",
/*106*/  "compiled script exceeds the maximum memory size (%ld bytes)",
/*107*/  "too many error messages on one line",
/*108*/  "codepage mapping file not found",
/*109*/  "invalid path: \"%s\"",
/*110*/  "assertion failed: %s",
/*111*/  "user error: %s"
/*112*/  "overlay function \"%s\" exceeds limit by %ld bytes"
#else
  "c\226\243\222a\205from \352le\331",
  "c\226\243writ\200\304 \352le\331",
  "t\263\200ov\211f\343w\331",
  "\202\324ff\322i\216\203mem\223y",
  "\202\355mpa\206\236\200\344\212s\331 v\211\324\207\215",
  "\371m\211\322 ov\211f\343w\316\262ce\266\323cap\342ity",
  "\355mpil\227scrip\203\262ce\266\207\372\275ximum mem\223\220\325\200(%l\205bytes)",
  "\304o m\226\220\211r\255messag\306\333\201\200l\202e",
  "\355\231pag\200\275pp\323\352\357\243fo\217d",
  "\264p\224h\331",
  "\370s\211\237fail\266: \210",
  "\251\274\211r\223: \210",
  "ov\211la\220\345\230 \262ce\266\207limi\203b\220%l\205bytes"
#endif
       };

static char *warnmsg[] = {
#ifdef SCPACK
/*200*/  "symbol \"%s\" is truncated to %d characters",
/*201*/  "redefinition of constant/macro (symbol \"%s\")",
/*202*/  "number of arguments does not match definition",
/*203*/  "symbol is never used: \"%s\"",
/*204*/  "symbol is assigned a value that is never used: \"%s\"",
/*205*/  "redundant code: constant expression is zero",
/*206*/  "redundant test: constant expression is non-zero",
/*207*/  "unknown #pragma",
/*208*/  "function with tag result used before definition, forcing reparse",
/*209*/  "function \"%s\" should return a value",
/*210*/  "possible use of symbol before initialization: \"%s\"",
/*211*/  "possibly unintended assignment",
/*212*/  "possibly unintended bitwise operation",
/*213*/  "tag mismatch",
/*214*/  "possibly a \"const\" array argument was intended: \"%s\"",
/*215*/  "expression has no effect",
/*216*/  "nested comment",
/*217*/  "loose indentation",
/*218*/  "old style prototypes used with optional semicolons",
/*219*/  "local variable \"%s\" shadows a variable at a preceding level",
/*220*/  "expression with tag override must appear between parentheses",
/*221*/  "label name \"%s\" shadows tag name",
/*222*/  "number of digits exceeds rational number precision",
/*223*/  "redundant \"sizeof\": argument size is always 1 (symbol \"%s\")",
/*224*/  "indeterminate array size in \"sizeof\" expression (symbol \"%s\")",
/*225*/  "unreachable code",
/*226*/  "a variable is assigned to itself (symbol \"%s\")",
/*227*/  "more initiallers than array fields",
/*228*/  "length of initialler exceeds size of the array field",
/*229*/  "mixing packed and unpacked array indexing or array assignment",
/*230*/  "no implementation for state \"%s\" in function \"%s\", no fall-back",
/*231*/  "state specification on forward declaration is ignored",
/*232*/  "native function lacks a predefined index (symbol \"%s\")",
/*233*/  "state variable \"%s\" shadows a global variable",
/*234*/  "function is deprecated (symbol \"%s\") %s",
/*235*/  "public function lacks forward declaration (symbol \"%s\")",
/*236*/  "unknown parameter in substitution (incorrect #define pattern)",
/*237*/  "recursive function \"%s\"",
/*238*/  "mixing string formats in concatenation"
#else
  "\301 \307tr\240\224\227\304 %\205\276\204\342\373s",
  "\222\311i\237\310\346\226t/\275cro \321",
  "\376\310\272t\207\366\306\243\330\276 \311i\212",
  "\250 \307nev\274\251\266\331",
  "\250 \307a\254gn\227\253\244u\200\256a\203\307nev\274\251\266\331",
  "\222d\217d\356\355\231: \346\356\353\333\307z\211o",
  "\222d\217d\356te\232: \346\356\353\333\307n\201-z\211o",
  "\217k\225w\337#p\235g\275",
  "\270\364\375\363\260\222\324l\203\251\227be\327\200\311i\212\316\327c\323\222p\204se",
  "\345\230 sho\354\205\222tur\337\253\244ue",
  "\367\254\236\200\251\200\310\250 be\327\200\202i\206\213iza\212\331",
  "\367\254\236\220\217\202t\216d\227a\254gn\233t",
  "\367\254\236\220\217\202t\216d\227bit\364s\200\361a\212",
  "\363\260mis\330\276",
  "\367\254\236\220\253\042\346\332\257\314wa\207\202t\216\231d\331",
  "\353\333\341\207\225 effect",
  "ne\232\227\355m\233t",
  "\343os\200\202d\216\363\212",
  "\242\205\232y\357pro\304typ\306\251\227\364\375\344\212\334sem\322\242\201s",
  "\343c\334\326\215 s\341\366w\207\253\326a\203\253\300c\266\323lev\336",
  "\353\333\364\375\363\260ov\211rid\200\320appe\204 betwe\216 p\204\216\256eses",
  "lab\336 n\365\200\215 s\341\366w\207\363\260n\365e",
  "\376\310\335git\207\262ce\266\207\235\212\334\376\300ci\221\201",
  "\222d\217d\356\042\325e\273\042: \314\325\200\307\213way\2071 \321",
  "\202\231\373m\202\224\200\257\325\200\340\042\325e\273\332\353\333\321",
  "\217\222a\276\263\200\355\231",
  "\253\326\307a\254gn\227\304 its\336f \321",
  "m\223\200\202i\206\213l\211\207\256\347\257\352\336ds",
  "l\216g\375\310\202i\206\213l\274\262ce\266\207\325\200\310\372\257\352\336d",
  "mix\323p\342k\227\226\205\217p\342k\227\257\202\231x\323\255\257a\254gn\233t",
  "\225 imple\233\363\237f\255\315\200\215 \340\345\230\316\225 f\213l-b\342k",
  "\315\200specif\322a\237\333\327w\204\205\231cl\204a\237\307ig\225\222d",
  "na\206\360\270l\342k\207\253\300\311\227\202\231x \321",
  "\315\200\326\215 s\341\366w\207\253g\343b\334\303e",
  "\270\307\231\300c\224\227\321 \210",
  "pu\236\322 \270l\342k\207\327w\204\205\231cl\204a\237\321",
  "\217k\225w\337p\204\365et\274\340\324bs\206tu\237(\202c\223\222c\203#\311\200p\224\373n)",
  "\222cur\221\360\345\230",
  "mix\323\232r\323\327\330\207\340\305c\224\216a\212"
#endif
       };

static char *noticemsg[] = {
#ifdef SCPACK
/*000*/  "*",   /* scpack does not like empty strings */
/*001*/  "did you mean \"%s\"?",
/*002*/  "did you mean to use double quotes?",
/*003*/  "did you forget \"%s\" before the expression?"
#else
  "*",
  "d\252you me\226\230?",
  "d\252you me\347\304 \251\200\366u\236\200quotes?",
  "d\252you \327ge\203\215 be\327\200\372\353\201?"
#endif
       };
